
<project>
	<property name="buildDirectory" value=""/>
	<property name="srcdir" value=""/>

	<property name="javacDebugInfo" value="true"/>
	<property name="javacFailOnError" value="true"/>
	<property name="javacSource" value="1.7"/>
	<property name="javacTarget" value="1.7"/>
	<property name="compilerarc" value="-g"/>
	<property name="os" value="linux"/>
	<property name="ws" value="gtk"/>
	<property name="arch" value="x86_64"/>
	<property name="feature.version" value="0.0.1"/>
	<property name="feature.id" value="org.psstools.psde.lang.feature"/>

        <path id="classpath">
                <fileset dir="${eclipse.home}/plugins"
			includes="com.google.guava_*.jar"/>
                <fileset dir="${eclipse.home}/plugins"
			includes="com.google.google.inject.assistedinject_*.jar"/>
                <fileset dir="${eclipse.home}/plugins"
			includes="com.google.google.inject.multibindings_*.jar"/>
                <fileset dir="${eclipse.home}/plugins"
			includes="com.google.inject_*.jar"/>
                <fileset dir="${eclipse.home}/plugins"
			includes="com.ibm.icu_*.jar"/>
                <fileset dir="${eclipse.home}/plugins"
			includes="javax.inject_*.jar"/>
                <fileset dir="${eclipse.home}/plugins"
			includes="org.antlr.runtime_*.jar"/>
                <fileset dir="${eclipse.home}/plugins"
			includes="org.apache.commons.cli_*.jar"/>
                <fileset dir="${eclipse.home}/plugins"
			includes="org.apache.commons.logging_*.jar"/>
                <fileset dir="${eclipse.home}/plugins"
			includes="org.apache.log4j_*.jar"/>
                <fileset dir="${eclipse.home}/plugins"
			includes="org.eclipse.emf.codegen.ecore_*.jar"/>
                <fileset dir="${eclipse.home}/plugins"
			includes="org.eclipse.emf.codegen_*.jar"/>
                <fileset dir="${eclipse.home}/plugins"
			includes="org.eclipse.emf.common_*.jar"/>
                <fileset dir="${eclipse.home}/plugins"
			includes="org.eclipse.emf.ecore.xmi_*.jar"/>
                <fileset dir="${eclipse.home}/plugins"
			includes="org.eclipse.emf.ecore_*.jar"/>
                <fileset dir="${eclipse.home}/plugins"
			includes="org.eclipse.emf.mwe.core_*.jar"/>
                <fileset dir="${eclipse.home}/plugins"
			includes="org.eclipse.emf.mwe.utils_*.jar"/>
                <fileset dir="${eclipse.home}/plugins"
			includes="org.eclipse.emf.mwe2.language_*.jar"/>
                <fileset dir="${eclipse.home}/plugins"
			includes="org.eclipse.emf.mwe2.launch_*.jar"/>
                <fileset dir="${eclipse.home}/plugins"
			includes="org.eclipse.emf.mwe2.lib_*.jar"/>
                <fileset dir="${eclipse.home}/plugins"
			includes="org.eclipse.emf.mwe2.runtime_*.jar"/>
                <fileset dir="${eclipse.home}/plugins"
			includes="org.eclipse.jdt.annotation_*.jar"/>
                <fileset dir="${eclipse.home}/plugins"
			includes="org.eclipse.jdt.annotation_*.jar"/>
                <fileset dir="${eclipse.home}/plugins"
			includes="org.eclipse.jdt.core_*.jar"/>
                <fileset dir="${eclipse.home}/plugins"
			includes="org.eclipse.xpand_*.jar"/>
                <fileset dir="${eclipse.home}/plugins"
			includes="org.eclipse.xtend.core_*.jar"/>
                <fileset dir="${eclipse.home}/plugins"
			includes="org.eclipse.xtend.lib_*.jar"/>
                <fileset dir="${eclipse.home}/plugins"
			includes="org.eclipse.xtend.lib.macro_*.jar"/>
                <fileset dir="${eclipse.home}/plugins"
			includes="org.eclipse.xtend.typesystem.emf_*.jar"/>
                <fileset dir="${eclipse.home}/plugins"
			includes="org.eclipse.xtend_*.jar"/>
                <fileset dir="${eclipse.home}/plugins"
			includes="org.eclipse.xtext.common.types_*.jar"/>
                <fileset dir="${eclipse.home}/plugins"
			includes="org.eclipse.xtext.generator_*.jar"/>
                <fileset dir="${eclipse.home}/plugins"
			includes="org.eclipse.xtext.xtext.generator_*.jar"/>
                <fileset dir="${eclipse.home}/plugins"
			includes="org.eclipse.xtext.util_*.jar"/>
                <fileset dir="${eclipse.home}/plugins"
			includes="org.eclipse.xtext.xbase.lib_*.jar"/>
                <fileset dir="${eclipse.home}/plugins"
			includes="org.eclipse.xtext.xbase_*.jar"/>
                <fileset dir="${eclipse.home}/plugins"
			includes="org.eclipse.xtext_*.jar"/>
                <fileset dir="${buildDirectory}/plugins/org.psstools.psde.lang"
                        includes=".antlr-generator-3.2.0-patch.jar"/>
<!--
		<pathelement location="${buildDirectory}/plugins/org.psstools.psde.lang"/>
  -->
		<pathelement location="${buildDirectory}/plugins/org.psstools.psde.lang/src"/>
		<pathelement location="${buildDirectory}/plugins/org.psstools.psde.lang/src-gen"/>
		<pathelement location="${buildDirectory}/plugins/org.psstools.psde.lang.ide/src"/>
		<pathelement location="${buildDirectory}/plugins/org.psstools.psde.lang.ide/src-gen"/>
		<pathelement location="${buildDirectory}/plugins/org.psstools.psde.lang.ui/src"/>
		<pathelement location="${buildDirectory}/plugins/org.psstools.psde.lang.ui/src-gen"/>
                <fileset dir="${eclipse.home}/plugins"
			includes="org.eclipse.core.runtime_*.jar"/>
                <fileset dir="${eclipse.home}/plugins"
			includes="org.eclipse.equinox.common_*.jar"/>
                <fileset dir="${eclipse.home}/plugins"
			includes="org.objectweb.asm_*.jar"/>
	</path>

	<taskdef name="xtendc"
		classname="org.eclipse.xtend.core.compiler.batch.XtendCompilerAntTask">
		<classpath>
			<fileset dir="${eclipse.home}/plugins">
				<include name="org.eclipse.xtend.core_*.jar"/>
				<include name="org.eclipse.xtend.standalone_*.jar"/>
			</fileset>
		</classpath>
	</taskdef>

	<taskdef name="xmltask"
		classname="com.oopsconsultancy.xmltask.ant.XmlTask">
		<classpath path="${basedir}/xmltask.jar"/>
	</taskdef>


	<target name="build" 
		depends="
		generate-xtext-artifacts,
		compile-java,
		mkarchive"/>
		<echo message="buldDirectory=${buildDirectory}"/>

<!--
            configInfo="win32,win32,x86_64"
  -->
	<target name="generate-xtext-artifacts">
        <eclipse.buildScript
            elements="feature@org.psstools.psde.lang.feature"
	    buildDirectory="${buildDirectory}"
            baseLocation="${eclipse.home}"
	    forceContextQualifier="0"
            configInfo="linux,gtk,x86_64"
	    generateFeatureVersionSuffix="true"
	    outputUpdateJars="true"/>

		<java fork="true" failonerror="true"
			classpathref="classpath"
			classname="org.eclipse.emf.mwe2.launch.runtime.Mwe2Launcher"
			dir="${buildDirectory}/plugins/org.psstools.psde.lang">
				<arg value="src/org/psstools/psde/lang/GeneratePSS.mwe2"/>
		</java>
	</target>

	<target name="compile-xtend">
		<pathconvert pathsep="${path.separator}"
			property="classpath-string"
			refid="classpath"/>
		<property name="xtend_cp"
			value="${classpath}${path.separator}src-gen"/>
		<java fork="true" failonerror="true"
			classpathref="classpath"
			classname="org.eclipse.xtend.core.compiler.batch.Main"
			dir="${buildDirectory}/plugins/org.psstools.psde.lang">
			<arg value="-cp"/>
			<arg value="${classpath-string}"/>
			<arg value="-d"/>
			<arg value="xtend-gen"/>
			<arg value="src-gen${path.separator}src"/>
		</java>
		<java fork="true" failonerror="true"
			classpathref="classpath"
			classname="org.eclipse.xtend.core.compiler.batch.Main"
			dir="${buildDirectory}/plugins/org.psstools.psde.lang.ide">
			<arg value="-cp"/>
			<arg value="${classpath-string}"/>
			<arg value="-d"/>
			<arg value="xtend-gen"/>
			<arg value="src-gen${path.separator}src"/>
		</java>
		<java fork="true" failonerror="true"
			classpathref="classpath"
			classname="org.eclipse.xtend.core.compiler.batch.Main"
			dir="${buildDirectory}/plugins/org.psstools.psde.lang.ui">
			<arg value="-cp"/>
			<arg value="${classpath-string}"/>
			<arg value="-d"/>
			<arg value="xtend-gen"/>
			<arg value="src-gen${path.separator}src"/>
		</java>
	</target>

	<target name="compile-java">
		<ant antfile="${buildDirectory}/features/${feature.id}/build.xml"
            dir="${buildDirectory}/features/org.psstools.psde.lang.feature"
	    target="build.jars"/>
        <ant antfile="${buildDirectory}/assemble.org.psstools.psde.lang.feature.${os}.${ws}.${arch}.xml"
		dir="${buildDirectory}">
		<property name="buildLabel" value="release"/>
		<property name="buildId" value="release"/>
		<property name="archivePrefix" value="psstools"/>
	</ant>
		<copy tofile="${buildDirectory}/psde-feature-${feature.version}.zip"
			file="${buildDirectory}/release/org.psstools.psde.lang.feature-release-${os}.${ws}.${arch}.zip"/>

	</target>

	<target name="mkarchive">
		<delete dir="${buildDirectory}/archive_tmp"/>
	        <mkdir dir="${buildDirectory}/archive_tmp"/>
	        <mkdir dir="${buildDirectory}/archive_tmp/features"/>
		<mkdir dir="${buildDirectory}/archive_tmp/plugins"/>

	        <ant antfile="${buildDirectory}/features/${feature.id}/build.xml"
			dir="${buildDirectory}/features/${feature.id}"
			target="build.update.jar">
			<property name="feature.destination" value="${buildDirectory}/archive_tmp/features"/>
			<property name="plugin.destination" value="${buildDirectory}/archive_tmp/plugins"/>
        </ant>

        <copy todir="${buildDirectory}/archive_tmp">
            <fileset dir="${srcdir}/features/${feature.id}">
                <include name="category.xml"/>
            </fileset>
            <filterset begintoken="1" endtoken="3">
                <filter token=".2." value="${feature.version}"/>
            </filterset>
        </copy>

        <!-- Create the P2 repository -->
        <p2.publish.featuresAndBundles
		metadataRepository="file:${buildDirectory}/archive_tmp/repository"
		artifactRepository="file:${buildDirectory}/archive_tmp/repository"
            	publishArtifacts="true"
		compress="false"
		source="${buildDirectory}/archive_tmp"/>


        <!-- Categorize the items in the repository -->
        <java fork="true" classname="org.eclipse.core.launcher.Main">
            <classpath>
                    <fileset dir="${eclipse.home}/plugins"
                            includes="org.eclipse.equinox.launcher_*.jar"/>
            </classpath>
            <arg value="-application"/>
            <arg value="org.eclipse.equinox.p2.publisher.CategoryPublisher"/>
            <arg value="-metadataRepository"/>
	    <arg value="file:/${buildDirectory}/archive_tmp/repository"/>
            <arg value="-categoryDefinition"/>
            <arg value="file:/${buildDirectory}/archive_tmp/category.xml"/>
            <arg value="-categoryQualifier"/>
        </java>

	<xmltask source="${buildDirectory}/archive_tmp/repository/artifacts.xml"
		dest="${buildDirectory}/archive_tmp/repository/artifacts_1.xml">
                <replace path="/repository/@name"
			withText="http://psstools.sourceforge.net/update-site"/>
        </xmltask>

	<move file="${buildDirectory}/archive_tmp/repository/artifacts_1.xml"
		tofile="${buildDirectory}/archive_tmp/repository/artifacts.xml"/>

	<xmltask source="${buildDirectory}/archive_tmp/repository/content.xml"
		dest="${buildDirectory}/archive_tmp/repository/content_1.xml">
                <replace path="/repository/@name"
			withText="http://psstools.sourceforge.net/update-site"/>
        </xmltask>

	<move file="${buildDirectory}/archive_tmp/repository/content_1.xml"
		tofile="${buildDirectory}/archive_tmp/repository/content.xml"/>


	<jar destfile="${buildDirectory}/../psde-${feature.version}.jar"
		basedir="${buildDirectory}/archive_tmp/repository"
             includes="*.xml, features/**, plugins/**"/>

        <copy todir="${buildDirectory}/archive_tmp" overwrite="true">
		<fileset dir="${srcdir}/../etc" includes="${feature.id}.mappings.xml"/>
                <filterset begintoken="1" endtoken="3">
                        <filter token=".2." value="${feature.version}"/>
                </filterset>
        </copy>

	<xmltask source="${buildDirectory}/archive_tmp/${feature.id}.mappings.xml">
            <copy path="/repository/mappings"
                  buffer="artifacts_mappings"/>
        </xmltask>

	<xmltask source="${buildDirectory}/archive_tmp/repository/artifacts.xml"
		dest="${buildDirectory}/archive_tmp/repository/artifacts_1.xml">
            <remove path="/repository/mappings"/>
            <insert path="/repository/properties" position="after"
		    file="${buildDirectory}/archive_tmp/${feature.id}.mappings.xml"/>
        </xmltask>

	<move file="${buildDirectory}/archive_tmp/repository/artifacts_1.xml"
		tofile="${buildDirectory}/archive_tmp/repository/artifacts.xml"/>

	<zip destfile="${buildDirectory}/archive_tmp/repository/artifacts.jar"
		basedir="${buildDirectory}/archive_tmp/repository" includes="artifacts.xml"/>
	<zip destfile="${buildDirectory}/archive_tmp/repository/content.jar"
		basedir="${buildDirectory}/archive_tmp/repository" includes="content.xml"/>
        <delete>
		<fileset dir="${buildDirectory}/archive_tmp/repository" includes="*.xml"/>
        </delete>

	<zip destfile="${buildDirectory}/../psde-release-${feature.version}.zip">
		<fileset dir="${buildDirectory}/archive_tmp/repository">
                        <include name="*.jar"/>
                        <include name="features/**"/>
                        <include name="plugins/**"/>
                </fileset>
        </zip>

	<delete dir="${buildDirectory}"/>

	</target>

</project>

