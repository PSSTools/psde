
enum pad_role_e {OUT, IN, CLOCK};
  
resource struct pad_s {
  // each pad instance can be assigned to at most 
  // one module in one role in a given scenario
  rand int module_id;
  rand pad_role_e role;
};

  coverspec slave_cs(configure_slave slave) {
    id : coverpoint slave.module_id {
      bins id [0..5];
    }
    
    out : coverpoint slave.out_pad.instance_id {
      bins out [0..59];
    }
    
    in : coverpoint slave.in_pad.instance_id {
      bins in [0..59];
    }
    
    clock : coverpoint slave.clock_pad.instance_id {
     bins clock [0..59]; 
    }
    
    slave_sel : coverpoint slave.slave_select_pad.instance_id {
      bins slave_sel [0..59];
    }
    
    all_combs : cross id, out, in, clock, slave_sel;
  }
  
  extend action SPI_c::configure_slave {
    slave_cs slv_cfg_cov(this);
  }

component SPI_c {
  action configure_slave {
    rand bit[0..5] module_id; // assuming these are the slave ids
    
    lock pad_s out_pad;
    constraint out_pad.role == OUT;
    constraint out_pad.module_id == module_id;
    
    lock pad_s in_pad;    
    constraint in_pad.role == IN;
    constraint in_pad.module_id == module_id;
    
    lock pad_s clock_pad;    
    constraint clock_pad.role == CLOCK;
    constraint clock_pad.module_id == module_id;
    
    lock pad_s slave_select_pad;
    constraint slave_select_pad.role == IN;
    constraint slave_select_pad.module_id == module_id;
  };
  
  
  action configure_master {    
    rand bit[6..9] module_id; // assuming these are the master ids

    lock pad_s out_pad;
    constraint out_pad.role == OUT;
    constraint out_pad.module_id == module_id;
    
    lock pad_s in_pad;    
    constraint in_pad.role == IN;
    constraint in_pad.module_id == module_id;
    
    lock pad_s clock_pad;    
    constraint clock_pad.role == CLOCK;
    constraint clock_pad.module_id == module_id;
    
    lock pad_s slave_select0_pad;
    constraint slave_select0_pad.role == OUT;
    constraint slave_select0_pad.module_id == module_id;

    lock pad_s slave_select1_pad;
    constraint slave_select1_pad.role == OUT;
    constraint slave_select1_pad.module_id == module_id;

    lock pad_s slave_select2_pad;
    constraint slave_select2_pad.role == OUT;
    constraint slave_select2_pad.module_id == module_id;

    lock pad_s slave_select3_pad;
    constraint slave_select3_pad.role == OUT;
    constraint slave_select3_pad.module_id == module_id;
    
  };  
};

component pss_top {
  pool pad_s padring;
  bind padring *;
  
  pool SPI_c spi_engines;
  bind spi_engines *;
  
  action configure_3_masters_3_slaves {
    graph {
      SPI_c::configure_master m0;
      SPI_c::configure_master m1;
      SPI_c::configure_master m2;
      constraint unique {m0.module_id, m1.module_id, m2.module_id};
      
      SPI_c::configure_slave s0;
      SPI_c::configure_slave s1;
      SPI_c::configure_slave s2;
      constraint unique { s0.module_id, s1.module_id, s2.module_id};
    }
  };
};

/*-------------------------------------------------------------------
 * Specific constraints for the 60 I/O pad SoC
 *-------------------------------------------------------------------*/
package automotive_60_pad_soc_pkg {
  
  extend struct pad_s {
   // This SoC has 60 I/O pads
   constraint instance_id inside [0..59];
   
   // constraints on roles of pads
   constraint role inside [IN, OUT] -> !(instance_id inside [0..19]);
   constraint role == CLOCK -> instance_id inside [3,7,11,15,19,23,27];  
  }

  extend action SPI_c::configure_slave {
    constraint {
      out_pad.instance_id inside [55..59];
      in_pad.instance_id inside [55..59];
      clock_pad.instance_id inside [55..59];
      slave_select_pad.instance_id inside [55..59];
    }
  }

  extend action SPI_c::configure_master {
    constraint {
      out_pad.instance_id inside [20..39];
      in_pad.instance_id inside [20..39];
      clock_pad.instance_id inside [20..39];
      slave_select0_pad.instance_id inside [20..39];
      slave_select1_pad.instance_id inside [20..39];
      slave_select2_pad.instance_id inside [20..39];
      slave_select3_pad.instance_id inside [20..39];
    }  
  }
}

package pad_configuration_c_impl_pkg {
  
  extend action SPI_c::configure_slave {
    exec body C = """
      configure_pin({{out_pad.instance_id}}, {{module_id}}, OUT);
      configure_pin({{in_pad.instance_id}}, {{module_id}}, IN);
      configure_pin({{clock_pad.instance_id}}, {{module_id}}, CLOCK);
      configure_pin({{slave_select_pad.instance_id}}, {{module_id}}, IN);
    """;
  }
  extend action SPI_c::configure_master {
    exec body C = """
      configure_pin({{out_pad.instance_id}}, {{module_id}}, OUT);
      configure_pin({{in_pad.instance_id}}, {{module_id}}, IN);
      configure_pin({{clock_pad.instance_id}}, {{module_id}}, CLOCK);
      configure_pin({{slave_select0_pad.instance_id}}, {{module_id}}, OUT);
      configure_pin({{slave_select1_pad.instance_id}}, {{module_id}}, OUT);
      configure_pin({{slave_select3_pad.instance_id}}, {{module_id}}, OUT);
      configure_pin({{slave_select4_pad.instance_id}}, {{module_id}}, OUT);
    """;
  }
}


/*-------------------------------------------------------------------
 * Specific constraints for the 120 I/O pad SoC
 *-------------------------------------------------------------------*/
package automotive_120_pad_soc_pkg {
  
  extend struct pad_s {
   // This SoC has 120 I/O pads
   constraint instance_id inside [0..119];
   
   // constraints on roles of pads
   // ...
  }
 
  // These masters have 6 slave selects
  extend action master_module_c::configure {
    lock pad_s slave_select4_pad;
    constraint slave_select4_pad.role == OUT;
    
    lock pad_s slave_select5_pad;
    constraint slave_select5_pad.role == OUT;
  }

  // Pin-use constraints specific to the 120-pad SoC
  // ...
}


