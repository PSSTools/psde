/*
* generated by Xtext
*/
grammar InternalPSS;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package net.sf.psstools.lang.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package net.sf.psstools.lang.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import net.sf.psstools.lang.services.PSSGrammarAccess;

}

@parser::members {

 	private PSSGrammarAccess grammarAccess;
 	
    public InternalPSSParser(TokenStream input, PSSGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected PSSGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getTopLevelPortable_stimulus_descriptionParserRuleCall_0()); 
	    }
		lv_topLevel_0_0=ruleportable_stimulus_description		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"topLevel",
        		lv_topLevel_0_0, 
        		"portable_stimulus_description");
	        afterParserOrEnumRuleCall();
	    }

)
)*
;





// Entry rule entryRuleportable_stimulus_description
entryRuleportable_stimulus_description returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPortable_stimulus_descriptionRule()); }
	 iv_ruleportable_stimulus_description=ruleportable_stimulus_description 
	 { $current=$iv_ruleportable_stimulus_description.current; } 
	 EOF 
;

// Rule portable_stimulus_description
ruleportable_stimulus_description returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getPortable_stimulus_descriptionAccess().getGraph_declarationParserRuleCall_0()); 
    }
    this_graph_declaration_0=rulegraph_declaration
    { 
        $current = $this_graph_declaration_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPortable_stimulus_descriptionAccess().getStruct_declarationParserRuleCall_1()); 
    }
    this_struct_declaration_1=rulestruct_declaration
    { 
        $current = $this_struct_declaration_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPortable_stimulus_descriptionAccess().getInterface_declarationParserRuleCall_2()); 
    }
    this_interface_declaration_2=ruleinterface_declaration
    { 
        $current = $this_interface_declaration_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;









// Entry rule entryRulegraph_declaration
entryRulegraph_declaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGraph_declarationRule()); }
	 iv_rulegraph_declaration=rulegraph_declaration 
	 { $current=$iv_rulegraph_declaration.current; } 
	 EOF 
;

// Rule graph_declaration
rulegraph_declaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='graph' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGraph_declarationAccess().getGraphKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getGraph_declarationAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGraph_declarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getGraph_declarationAccess().getLeftParenthesisKeyword_2_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getGraph_declarationAccess().getPortsPort_declarationParserRuleCall_2_1_0_0()); 
	    }
		lv_ports_3_0=ruleport_declaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGraph_declarationRule());
	        }
       		add(
       			$current, 
       			"ports",
        		lv_ports_3_0, 
        		"port_declaration");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getGraph_declarationAccess().getCommaKeyword_2_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGraph_declarationAccess().getPortsPort_declarationParserRuleCall_2_1_1_1_0()); 
	    }
		lv_ports_5_0=ruleport_declaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGraph_declarationRule());
	        }
       		add(
       			$current, 
       			"ports",
        		lv_ports_5_0, 
        		"port_declaration");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getGraph_declarationAccess().getRightParenthesisKeyword_2_2());
    }
)?(	otherlv_7='extends' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getGraph_declarationAccess().getExtendsKeyword_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGraph_declarationRule());
	        }
        }
	otherlv_8=RULE_ID
	{
		newLeafNode(otherlv_8, grammarAccess.getGraph_declarationAccess().getSuperGraph_or_struct_declarationCrossReference_3_1_0()); 
	}

)
))?	otherlv_9='{' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getGraph_declarationAccess().getLeftCurlyBracketKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGraph_declarationAccess().getBodyGraph_body_itemParserRuleCall_5_0()); 
	    }
		lv_body_10_0=rulegraph_body_item		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGraph_declarationRule());
	        }
       		add(
       			$current, 
       			"body",
        		lv_body_10_0, 
        		"graph_body_item");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getGraph_declarationAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleport_declaration
entryRuleport_declaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPort_declarationRule()); }
	 iv_ruleport_declaration=ruleport_declaration 
	 { $current=$iv_ruleport_declaration.current; } 
	 EOF 
;

// Rule port_declaration
ruleport_declaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='export' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPort_declarationAccess().getExportKeyword_0());
    }
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPort_declarationRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getPort_declarationAccess().getIfc_typeInterface_declarationCrossReference_1_0()); 
	}

)
)(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getPort_declarationAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPort_declarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRulestruct_declaration
entryRulestruct_declaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStruct_declarationRule()); }
	 iv_rulestruct_declaration=rulestruct_declaration 
	 { $current=$iv_rulestruct_declaration.current; } 
	 EOF 
;

// Rule struct_declaration
rulestruct_declaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='struct' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStruct_declarationAccess().getStructKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getStruct_declarationAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStruct_declarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='extends' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStruct_declarationAccess().getExtendsKeyword_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getStruct_declarationRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getStruct_declarationAccess().getSuperStruct_declarationCrossReference_2_1_0()); 
	}

)
))?	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getStruct_declarationAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStruct_declarationAccess().getBodyStruct_body_itemParserRuleCall_4_0()); 
	    }
		lv_body_5_0=rulestruct_body_item		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStruct_declarationRule());
	        }
       		add(
       			$current, 
       			"body",
        		lv_body_5_0, 
        		"struct_body_item");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getStruct_declarationAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRulestruct_graph_body_item
entryRulestruct_graph_body_item returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStruct_graph_body_itemRule()); }
	 iv_rulestruct_graph_body_item=rulestruct_graph_body_item 
	 { $current=$iv_rulestruct_graph_body_item.current; } 
	 EOF 
;

// Rule struct_graph_body_item
rulestruct_graph_body_item returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getStruct_graph_body_itemAccess().getOverrides_declarationParserRuleCall_0()); 
    }
    this_overrides_declaration_0=ruleoverrides_declaration
    { 
        $current = $this_overrides_declaration_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getStruct_graph_body_itemAccess().getConstraint_declarationParserRuleCall_1()); 
    }
    this_constraint_declaration_1=ruleconstraint_declaration
    { 
        $current = $this_constraint_declaration_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulestruct_body_item
entryRulestruct_body_item returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStruct_body_itemRule()); }
	 iv_rulestruct_body_item=rulestruct_body_item 
	 { $current=$iv_rulestruct_body_item.current; } 
	 EOF 
;

// Rule struct_body_item
rulestruct_body_item returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getStruct_body_itemAccess().getStruct_graph_body_itemParserRuleCall_0()); 
    }
    this_struct_graph_body_item_0=rulestruct_graph_body_item
    { 
        $current = $this_struct_graph_body_item_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getStruct_body_itemAccess().getStruct_data_declarationParserRuleCall_1()); 
    }
    this_struct_data_declaration_1=rulestruct_data_declaration
    { 
        $current = $this_struct_data_declaration_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulegraph_body_item
entryRulegraph_body_item returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGraph_body_itemRule()); }
	 iv_rulegraph_body_item=rulegraph_body_item 
	 { $current=$iv_rulegraph_body_item.current; } 
	 EOF 
;

// Rule graph_body_item
rulegraph_body_item returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getGraph_body_itemAccess().getStruct_graph_body_itemParserRuleCall_0()); 
    }
    this_struct_graph_body_item_0=rulestruct_graph_body_item
    { 
        $current = $this_struct_graph_body_item_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getGraph_body_itemAccess().getGraph_data_declarationParserRuleCall_1()); 
    }
    this_graph_data_declaration_1=rulegraph_data_declaration
    { 
        $current = $this_graph_data_declaration_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getGraph_body_itemAccess().getSymbol_declarationParserRuleCall_2()); 
    }
    this_symbol_declaration_2=rulesymbol_declaration
    { 
        $current = $this_symbol_declaration_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getGraph_body_itemAccess().getSymbol_definitionParserRuleCall_3()); 
    }
    this_symbol_definition_3=rulesymbol_definition
    { 
        $current = $this_symbol_definition_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulesymbol_definition
entryRulesymbol_definition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSymbol_definitionRule()); }
	 iv_rulesymbol_definition=rulesymbol_definition 
	 { $current=$iv_rulesymbol_definition.current; } 
	 EOF 
;

// Rule symbol_definition
rulesymbol_definition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getSymbol_definitionAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSymbol_definitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1=':=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSymbol_definitionAccess().getColonEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSymbol_definitionAccess().getRuleRule_productionParserRuleCall_2_0()); 
	    }
		lv_rule_2_0=rulerule_production		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSymbol_definitionRule());
	        }
       		set(
       			$current, 
       			"rule",
        		lv_rule_2_0, 
        		"rule_production");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulerule_production
entryRulerule_production returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRule_productionRule()); }
	 iv_rulerule_production=rulerule_production 
	 { $current=$iv_rulerule_production.current; } 
	 EOF 
;

// Rule rule_production
rulerule_production returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getRule_productionAccess().getStmt_or_blockParserRuleCall()); 
    }
    this_stmt_or_block_0=rulestmt_or_block
    { 
        $current = $this_stmt_or_block_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRulestmt_or_block
entryRulestmt_or_block returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStmt_or_blockRule()); }
	 iv_rulestmt_or_block=rulestmt_or_block 
	 { $current=$iv_rulestmt_or_block.current; } 
	 EOF 
;

// Rule stmt_or_block
rulestmt_or_block returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getStmt_or_blockAccess().getRepeat_stmtParserRuleCall_0()); 
    }
    this_repeat_stmt_0=rulerepeat_stmt
    { 
        $current = $this_repeat_stmt_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getStmt_or_blockAccess().getAlt_stmtParserRuleCall_1()); 
    }
    this_alt_stmt_1=rulealt_stmt
    { 
        $current = $this_alt_stmt_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulealt_stmt
entryRulealt_stmt returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAlt_stmtRule()); }
	 iv_rulealt_stmt=rulealt_stmt 
	 { $current=$iv_rulealt_stmt.current; } 
	 EOF 
;

// Rule alt_stmt
rulealt_stmt returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAlt_stmtAccess().getStmt_primaryParserRuleCall_0()); 
    }
    this_stmt_primary_0=rulestmt_primary
    { 
        $current = $this_stmt_primary_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getAlt_stmtAccess().getAlt_stmtLeftAction_1_0(),
            $current);
    }
)	otherlv_2='|' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAlt_stmtAccess().getVerticalLineKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAlt_stmtAccess().getRightStmt_primaryParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=rulestmt_primary		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAlt_stmtRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"stmt_primary");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRulestmt_primary
entryRulestmt_primary returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStmt_primaryRule()); }
	 iv_rulestmt_primary=rulestmt_primary 
	 { $current=$iv_rulestmt_primary.current; } 
	 EOF 
;

// Rule stmt_primary
rulestmt_primary returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getStmt_primaryAccess().getStmt_altParserRuleCall_0_0()); 
    }
    this_stmt_alt_0=rulestmt_alt
    { 
        $current = $this_stmt_alt_0.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_1=';' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getStmt_primaryAccess().getSemicolonKeyword_0_1());
    }
)
    |(	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStmt_primaryAccess().getLeftCurlyBracketKeyword_1_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getStmt_primaryAccess().getStmt_primaryAction_1_1(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getStmt_primaryAccess().getStmt_listStmt_or_blockParserRuleCall_1_2_0()); 
	    }
		lv_stmt_list_4_0=rulestmt_or_block		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStmt_primaryRule());
	        }
       		add(
       			$current, 
       			"stmt_list",
        		lv_stmt_list_4_0, 
        		"stmt_or_block");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getStmt_primaryAccess().getRightCurlyBracketKeyword_1_3());
    }
))
;





// Entry rule entryRulestmt_alt
entryRulestmt_alt returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStmt_altRule()); }
	 iv_rulestmt_alt=rulestmt_alt 
	 { $current=$iv_rulestmt_alt.current; } 
	 EOF 
;

// Rule stmt_alt
rulestmt_alt returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getStmt_altAccess().getStmt_parallelParserRuleCall_0()); 
    }
    this_stmt_parallel_0=rulestmt_parallel
    { 
        $current = $this_stmt_parallel_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getStmt_altAccess().getStmt_altLeftAction_1_0(),
            $current);
    }
)	otherlv_2='|' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStmt_altAccess().getVerticalLineKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStmt_altAccess().getRightStmt_parallelParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=rulestmt_parallel		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStmt_altRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"stmt_parallel");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRulestmt_parallel
entryRulestmt_parallel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStmt_parallelRule()); }
	 iv_rulestmt_parallel=rulestmt_parallel 
	 { $current=$iv_rulestmt_parallel.current; } 
	 EOF 
;

// Rule stmt_parallel
rulestmt_parallel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getStmt_parallelAccess().getSeqParserRuleCall_0()); 
    }
    this_seq_0=ruleseq
    { 
        $current = $this_seq_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getStmt_parallelAccess().getStmt_parallelLeftAction_1_0(),
            $current);
    }
)	otherlv_2='&' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStmt_parallelAccess().getAmpersandKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStmt_parallelAccess().getRightSeqParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleseq		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStmt_parallelRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"seq");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleseq
entryRuleseq returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSeqRule()); }
	 iv_ruleseq=ruleseq 
	 { $current=$iv_ruleseq.current; } 
	 EOF 
;

// Rule seq
ruleseq returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSeqAccess().getItemsSeq_itemParserRuleCall_0_0()); 
	    }
		lv_items_0_0=ruleseq_item		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSeqRule());
	        }
       		add(
       			$current, 
       			"items",
        		lv_items_0_0, 
        		"seq_item");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSeqAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSeqAccess().getItemsSeq_itemParserRuleCall_1_1_0()); 
	    }
		lv_items_2_0=ruleseq_item		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSeqRule());
	        }
       		add(
       			$current, 
       			"items",
        		lv_items_2_0, 
        		"seq_item");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleseq_item
entryRuleseq_item returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSeq_itemRule()); }
	 iv_ruleseq_item=ruleseq_item 
	 { $current=$iv_ruleseq_item.current; } 
	 EOF 
;

// Rule seq_item
ruleseq_item returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSeq_itemAccess().getHierarchical_idParserRuleCall_0()); 
    }
    this_hierarchical_id_0=rulehierarchical_id
    { 
        $current = $this_hierarchical_id_0.current; 
        afterParserOrEnumRuleCall();
    }
(	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSeq_itemAccess().getLeftParenthesisKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSeq_itemAccess().getParametersIfc_call_parameter_listParserRuleCall_1_1_0()); 
	    }
		lv_parameters_2_0=ruleifc_call_parameter_list		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSeq_itemRule());
	        }
       		set(
       			$current, 
       			"parameters",
        		lv_parameters_2_0, 
        		"ifc_call_parameter_list");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSeq_itemAccess().getRightParenthesisKeyword_1_2());
    }
)?)
;





// Entry rule entryRuleifc_call_parameter_list
entryRuleifc_call_parameter_list returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIfc_call_parameter_listRule()); }
	 iv_ruleifc_call_parameter_list=ruleifc_call_parameter_list 
	 { $current=$iv_ruleifc_call_parameter_list.current; } 
	 EOF 
;

// Rule ifc_call_parameter_list
ruleifc_call_parameter_list returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getIfc_call_parameter_listAccess().getParametersHierarchical_idParserRuleCall_0_0()); 
	    }
		lv_parameters_0_0=rulehierarchical_id		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfc_call_parameter_listRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_0_0, 
        		"hierarchical_id");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIfc_call_parameter_listAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfc_call_parameter_listAccess().getParametersHierarchical_idParserRuleCall_1_1_0()); 
	    }
		lv_parameters_2_0=rulehierarchical_id		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfc_call_parameter_listRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_2_0, 
        		"hierarchical_id");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRulerepeat_stmt
entryRulerepeat_stmt returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRepeat_stmtRule()); }
	 iv_rulerepeat_stmt=rulerepeat_stmt 
	 { $current=$iv_rulerepeat_stmt.current; } 
	 EOF 
;

// Rule repeat_stmt
rulerepeat_stmt returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='repeat' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRepeat_stmtAccess().getRepeatKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRepeat_stmtAccess().getStmtStmt_or_blockParserRuleCall_1_0()); 
	    }
		lv_stmt_1_0=rulestmt_or_block		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRepeat_stmtRule());
	        }
       		set(
       			$current, 
       			"stmt",
        		lv_stmt_1_0, 
        		"stmt_or_block");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleoverrides_declaration
entryRuleoverrides_declaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOverrides_declarationRule()); }
	 iv_ruleoverrides_declaration=ruleoverrides_declaration 
	 { $current=$iv_ruleoverrides_declaration.current; } 
	 EOF 
;

// Rule overrides_declaration
ruleoverrides_declaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getOverrides_declarationAccess().getOverides_declarationAction_0(),
            $current);
    }
)	otherlv_1='override' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOverrides_declarationAccess().getOverrideKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getOverrides_declarationAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOverrides_declarationAccess().getOverridesOverride_stmtParserRuleCall_3_0()); 
	    }
		lv_overrides_3_0=ruleoverride_stmt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOverrides_declarationRule());
	        }
       		add(
       			$current, 
       			"overrides",
        		lv_overrides_3_0, 
        		"override_stmt");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getOverrides_declarationAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleoverride_stmt
entryRuleoverride_stmt returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOverride_stmtRule()); }
	 iv_ruleoverride_stmt=ruleoverride_stmt 
	 { $current=$iv_ruleoverride_stmt.current; } 
	 EOF 
;

// Rule override_stmt
ruleoverride_stmt returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getOverride_stmtAccess().getType_overrideParserRuleCall_0()); 
    }
    this_type_override_0=ruletype_override
    { 
        $current = $this_type_override_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOverride_stmtAccess().getInstance_overrideParserRuleCall_1()); 
    }
    this_instance_override_1=ruleinstance_override
    { 
        $current = $this_instance_override_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuletype_override
entryRuletype_override returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getType_overrideRule()); }
	 iv_ruletype_override=ruletype_override 
	 { $current=$iv_ruletype_override.current; } 
	 EOF 
;

// Rule type_override
ruletype_override returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='type' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getType_overrideAccess().getTypeKeyword_0());
    }
(
(
		lv_src_1_0=RULE_ID
		{
			newLeafNode(lv_src_1_0, grammarAccess.getType_overrideAccess().getSrcIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getType_overrideRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"src",
        		lv_src_1_0, 
        		"ID");
	    }

)
)	otherlv_2='with' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getType_overrideAccess().getWithKeyword_2());
    }
(
(
		lv_dest_3_0=RULE_ID
		{
			newLeafNode(lv_dest_3_0, grammarAccess.getType_overrideAccess().getDestIDTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getType_overrideRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dest",
        		lv_dest_3_0, 
        		"ID");
	    }

)
)	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getType_overrideAccess().getSemicolonKeyword_4());
    }
)
;





// Entry rule entryRuleinstance_override
entryRuleinstance_override returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstance_overrideRule()); }
	 iv_ruleinstance_override=ruleinstance_override 
	 { $current=$iv_ruleinstance_override.current; } 
	 EOF 
;

// Rule instance_override
ruleinstance_override returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='instance' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInstance_overrideAccess().getInstanceKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstance_overrideAccess().getSrcHierarchical_idParserRuleCall_1_0()); 
	    }
		lv_src_1_0=rulehierarchical_id		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstance_overrideRule());
	        }
       		set(
       			$current, 
       			"src",
        		lv_src_1_0, 
        		"hierarchical_id");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='with' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInstance_overrideAccess().getWithKeyword_2());
    }
(
(
		lv_dest_3_0=RULE_ID
		{
			newLeafNode(lv_dest_3_0, grammarAccess.getInstance_overrideAccess().getDestIDTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstance_overrideRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dest",
        		lv_dest_3_0, 
        		"ID");
	    }

)
)	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInstance_overrideAccess().getSemicolonKeyword_4());
    }
)
;





// Entry rule entryRuleconstraint_declaration
entryRuleconstraint_declaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstraint_declarationRule()); }
	 iv_ruleconstraint_declaration=ruleconstraint_declaration 
	 { $current=$iv_ruleconstraint_declaration.current; } 
	 EOF 
;

// Rule constraint_declaration
ruleconstraint_declaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='constraint' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getConstraint_declarationAccess().getConstraintKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getConstraint_declarationAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstraint_declarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getConstraint_declarationAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstraint_declarationAccess().getBodyConstraint_body_itemParserRuleCall_3_0()); 
	    }
		lv_body_3_0=ruleconstraint_body_item		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstraint_declarationRule());
	        }
       		add(
       			$current, 
       			"body",
        		lv_body_3_0, 
        		"constraint_body_item");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getConstraint_declarationAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleconstraint_body_no_if_item
entryRuleconstraint_body_no_if_item returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstraint_body_no_if_itemRule()); }
	 iv_ruleconstraint_body_no_if_item=ruleconstraint_body_no_if_item 
	 { $current=$iv_ruleconstraint_body_no_if_item.current; } 
	 EOF 
;

// Rule constraint_body_no_if_item
ruleconstraint_body_no_if_item returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getConstraint_body_no_if_itemAccess().getExpression_or_dist_itemParserRuleCall_0()); 
    }
    this_expression_or_dist_item_0=ruleexpression_or_dist_item
    { 
        $current = $this_expression_or_dist_item_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConstraint_body_no_if_itemAccess().getForeach_constraint_itemParserRuleCall_1()); 
    }
    this_foreach_constraint_item_1=ruleforeach_constraint_item
    { 
        $current = $this_foreach_constraint_item_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleconstraint_body_item
entryRuleconstraint_body_item returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstraint_body_itemRule()); }
	 iv_ruleconstraint_body_item=ruleconstraint_body_item 
	 { $current=$iv_ruleconstraint_body_item.current; } 
	 EOF 
;

// Rule constraint_body_item
ruleconstraint_body_item returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getConstraint_body_itemAccess().getConstraint_body_no_if_itemParserRuleCall_0()); 
    }
    this_constraint_body_no_if_item_0=ruleconstraint_body_no_if_item
    { 
        $current = $this_constraint_body_no_if_item_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConstraint_body_itemAccess().getIf_constraint_itemParserRuleCall_1()); 
    }
    this_if_constraint_item_1=ruleif_constraint_item
    { 
        $current = $this_if_constraint_item_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleexpression_or_dist_item
entryRuleexpression_or_dist_item returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpression_or_dist_itemRule()); }
	 iv_ruleexpression_or_dist_item=ruleexpression_or_dist_item 
	 { $current=$iv_ruleexpression_or_dist_item.current; } 
	 EOF 
;

// Rule expression_or_dist_item
ruleexpression_or_dist_item returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getExpression_or_dist_itemAccess().getExpressionParserRuleCall_0()); 
    }
    this_expression_0=ruleexpression
    { 
        $current = $this_expression_0.current; 
        afterParserOrEnumRuleCall();
    }
((	otherlv_1='->' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getExpression_or_dist_itemAccess().getHyphenMinusGreaterThanSignKeyword_1_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpression_or_dist_itemAccess().getImpl_constraintConstraint_setParserRuleCall_1_0_1_0()); 
	    }
		lv_impl_constraint_2_0=ruleconstraint_set		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpression_or_dist_itemRule());
	        }
       		set(
       			$current, 
       			"impl_constraint",
        		lv_impl_constraint_2_0, 
        		"constraint_set");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getExpression_or_dist_itemAccess().getSemicolonKeyword_1_1());
    }
))
;





// Entry rule entryRuleif_constraint_item
entryRuleif_constraint_item returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIf_constraint_itemRule()); }
	 iv_ruleif_constraint_item=ruleif_constraint_item 
	 { $current=$iv_ruleif_constraint_item.current; } 
	 EOF 
;

// Rule if_constraint_item
ruleif_constraint_item returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='if' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIf_constraint_itemAccess().getIfKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIf_constraint_itemAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIf_constraint_itemAccess().getIf_exprExpressionParserRuleCall_2_0()); 
	    }
		lv_if_expr_2_0=ruleexpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIf_constraint_itemRule());
	        }
       		set(
       			$current, 
       			"if_expr",
        		lv_if_expr_2_0, 
        		"expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIf_constraint_itemAccess().getRightParenthesisKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIf_constraint_itemAccess().getTrue_caseConstraint_setParserRuleCall_4_0()); 
	    }
		lv_true_case_4_0=ruleconstraint_set		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIf_constraint_itemRule());
	        }
       		set(
       			$current, 
       			"true_case",
        		lv_true_case_4_0, 
        		"constraint_set");
	        afterParserOrEnumRuleCall();
	    }

)
)(((	'else' 
)=>	otherlv_5='else' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIf_constraint_itemAccess().getElseKeyword_5_0());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIf_constraint_itemAccess().getFalse_setConstraint_setParserRuleCall_5_1_0()); 
	    }
		lv_false_set_6_0=ruleconstraint_set		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIf_constraint_itemRule());
	        }
       		set(
       			$current, 
       			"false_set",
        		lv_false_set_6_0, 
        		"constraint_set");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleforeach_constraint_item
entryRuleforeach_constraint_item returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getForeach_constraint_itemRule()); }
	 iv_ruleforeach_constraint_item=ruleforeach_constraint_item 
	 { $current=$iv_ruleforeach_constraint_item.current; } 
	 EOF 
;

// Rule foreach_constraint_item
ruleforeach_constraint_item returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='foreach' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getForeach_constraint_itemAccess().getForeachKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getForeach_constraint_itemAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getForeach_constraint_itemAccess().getExprExpressionParserRuleCall_2_0()); 
	    }
		lv_expr_2_0=ruleexpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForeach_constraint_itemRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_2_0, 
        		"expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getForeach_constraint_itemAccess().getRightParenthesisKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getForeach_constraint_itemAccess().getBodyConstraint_setParserRuleCall_4_0()); 
	    }
		lv_body_4_0=ruleconstraint_set		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForeach_constraint_itemRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_4_0, 
        		"constraint_set");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleconstraint_set
entryRuleconstraint_set returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstraint_setRule()); }
	 iv_ruleconstraint_set=ruleconstraint_set 
	 { $current=$iv_ruleconstraint_set.current; } 
	 EOF 
;

// Rule constraint_set
ruleconstraint_set returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getConstraint_setAccess().getItemsConstraint_body_itemParserRuleCall_0_0()); 
	    }
		lv_items_0_0=ruleconstraint_body_item		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstraint_setRule());
	        }
       		add(
       			$current, 
       			"items",
        		lv_items_0_0, 
        		"constraint_body_item");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getConstraint_setAccess().getLeftCurlyBracketKeyword_1_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getConstraint_setAccess().getConstraint_setAction_1_1(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConstraint_setAccess().getItemsConstraint_body_itemParserRuleCall_1_2_0()); 
	    }
		lv_items_3_0=ruleconstraint_body_item		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstraint_setRule());
	        }
       		add(
       			$current, 
       			"items",
        		lv_items_3_0, 
        		"constraint_body_item");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getConstraint_setAccess().getRightCurlyBracketKeyword_1_3());
    }
))
;





// Entry rule entryRuleexpression
entryRuleexpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	 iv_ruleexpression=ruleexpression 
	 { $current=$iv_ruleexpression.current; } 
	 EOF 
;

// Rule expression
ruleexpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getExpressionAccess().getCondition_exprParserRuleCall()); 
    }
    this_condition_expr_0=rulecondition_expr
    { 
        $current = $this_condition_expr_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRulecondition_expr
entryRulecondition_expr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCondition_exprRule()); }
	 iv_rulecondition_expr=rulecondition_expr 
	 { $current=$iv_rulecondition_expr.current; } 
	 EOF 
;

// Rule condition_expr
rulecondition_expr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getCondition_exprAccess().getLogical_or_exprParserRuleCall_0()); 
    }
    this_logical_or_expr_0=rulelogical_or_expr
    { 
        $current = $this_logical_or_expr_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getCondition_exprAccess().getCondition_exprLeftAction_1_0(),
            $current);
    }
)	otherlv_2='?' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCondition_exprAccess().getQuestionMarkKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCondition_exprAccess().getTrue_exprLogical_or_exprParserRuleCall_1_2_0()); 
	    }
		lv_true_expr_3_0=rulelogical_or_expr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCondition_exprRule());
	        }
       		set(
       			$current, 
       			"true_expr",
        		lv_true_expr_3_0, 
        		"logical_or_expr");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCondition_exprAccess().getColonKeyword_1_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCondition_exprAccess().getFalse_exprLogical_or_exprParserRuleCall_1_4_0()); 
	    }
		lv_false_expr_5_0=rulelogical_or_expr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCondition_exprRule());
	        }
       		set(
       			$current, 
       			"false_expr",
        		lv_false_expr_5_0, 
        		"logical_or_expr");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRulelogical_or_expr
entryRulelogical_or_expr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLogical_or_exprRule()); }
	 iv_rulelogical_or_expr=rulelogical_or_expr 
	 { $current=$iv_rulelogical_or_expr.current; } 
	 EOF 
;

// Rule logical_or_expr
rulelogical_or_expr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getLogical_or_exprAccess().getLogical_and_exprParserRuleCall_0()); 
    }
    this_logical_and_expr_0=rulelogical_and_expr
    { 
        $current = $this_logical_and_expr_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getLogical_or_exprAccess().getLogical_or_exprLeftAction_1_0(),
            $current);
    }
)	otherlv_2='&&' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getLogical_or_exprAccess().getAmpersandAmpersandKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLogical_or_exprAccess().getRightLogical_and_exprParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=rulelogical_and_expr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLogical_or_exprRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"logical_and_expr");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRulelogical_and_expr
entryRulelogical_and_expr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLogical_and_exprRule()); }
	 iv_rulelogical_and_expr=rulelogical_and_expr 
	 { $current=$iv_rulelogical_and_expr.current; } 
	 EOF 
;

// Rule logical_and_expr
rulelogical_and_expr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getLogical_and_exprAccess().getBinary_or_exprParserRuleCall_0()); 
    }
    this_binary_or_expr_0=rulebinary_or_expr
    { 
        $current = $this_binary_or_expr_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getLogical_and_exprAccess().getLogical_and_exprLeftAction_1_0(),
            $current);
    }
)	otherlv_2='||' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getLogical_and_exprAccess().getVerticalLineVerticalLineKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLogical_and_exprAccess().getRightBinary_or_exprParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=rulebinary_or_expr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLogical_and_exprRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"binary_or_expr");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRulebinary_or_expr
entryRulebinary_or_expr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBinary_or_exprRule()); }
	 iv_rulebinary_or_expr=rulebinary_or_expr 
	 { $current=$iv_rulebinary_or_expr.current; } 
	 EOF 
;

// Rule binary_or_expr
rulebinary_or_expr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getBinary_or_exprAccess().getBinary_xor_exprParserRuleCall_0()); 
    }
    this_binary_xor_expr_0=rulebinary_xor_expr
    { 
        $current = $this_binary_xor_expr_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getBinary_or_exprAccess().getLogical_or_exprLeftAction_1_0(),
            $current);
    }
)	otherlv_2='|' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBinary_or_exprAccess().getVerticalLineKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBinary_or_exprAccess().getRightBinary_xor_exprParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=rulebinary_xor_expr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBinary_or_exprRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"binary_xor_expr");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRulebinary_xor_expr
entryRulebinary_xor_expr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBinary_xor_exprRule()); }
	 iv_rulebinary_xor_expr=rulebinary_xor_expr 
	 { $current=$iv_rulebinary_xor_expr.current; } 
	 EOF 
;

// Rule binary_xor_expr
rulebinary_xor_expr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getBinary_xor_exprAccess().getBinary_and_exprParserRuleCall_0()); 
    }
    this_binary_and_expr_0=rulebinary_and_expr
    { 
        $current = $this_binary_and_expr_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getBinary_xor_exprAccess().getBinary_xor_exprLeftAction_1_0(),
            $current);
    }
)	otherlv_2='^' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBinary_xor_exprAccess().getCircumflexAccentKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBinary_xor_exprAccess().getRightBinary_and_exprParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=rulebinary_and_expr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBinary_xor_exprRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"binary_and_expr");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRulebinary_and_expr
entryRulebinary_and_expr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBinary_and_exprRule()); }
	 iv_rulebinary_and_expr=rulebinary_and_expr 
	 { $current=$iv_rulebinary_and_expr.current; } 
	 EOF 
;

// Rule binary_and_expr
rulebinary_and_expr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getBinary_and_exprAccess().getLogical_equality_exprParserRuleCall_0()); 
    }
    this_logical_equality_expr_0=rulelogical_equality_expr
    { 
        $current = $this_logical_equality_expr_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getBinary_and_exprAccess().getBinary_and_exprLeftAction_1_0(),
            $current);
    }
)	otherlv_2='&' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBinary_and_exprAccess().getAmpersandKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBinary_and_exprAccess().getRightLogical_equality_exprParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=rulelogical_equality_expr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBinary_and_exprRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"logical_equality_expr");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRulelogical_equality_expr
entryRulelogical_equality_expr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLogical_equality_exprRule()); }
	 iv_rulelogical_equality_expr=rulelogical_equality_expr 
	 { $current=$iv_rulelogical_equality_expr.current; } 
	 EOF 
;

// Rule logical_equality_expr
rulelogical_equality_expr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getLogical_equality_exprAccess().getLogical_inequality_exprParserRuleCall_0()); 
    }
    this_logical_inequality_expr_0=rulelogical_inequality_expr
    { 
        $current = $this_logical_inequality_expr_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getLogical_equality_exprAccess().getLogical_equality_exprLeftAction_1_0(),
            $current);
    }
)(
(
(
		lv_op_2_1=	'==' 
    {
        newLeafNode(lv_op_2_1, grammarAccess.getLogical_equality_exprAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLogical_equality_exprRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_1, null);
	    }

    |		lv_op_2_2=	'!=' 
    {
        newLeafNode(lv_op_2_2, grammarAccess.getLogical_equality_exprAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLogical_equality_exprRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_2, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLogical_equality_exprAccess().getRightLogical_inequality_exprParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=rulelogical_inequality_expr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLogical_equality_exprRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"logical_inequality_expr");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRulelogical_inequality_expr
entryRulelogical_inequality_expr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLogical_inequality_exprRule()); }
	 iv_rulelogical_inequality_expr=rulelogical_inequality_expr 
	 { $current=$iv_rulelogical_inequality_expr.current; } 
	 EOF 
;

// Rule logical_inequality_expr
rulelogical_inequality_expr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getLogical_inequality_exprAccess().getBinary_shift_exprParserRuleCall_0()); 
    }
    this_binary_shift_expr_0=rulebinary_shift_expr
    { 
        $current = $this_binary_shift_expr_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getLogical_inequality_exprAccess().getLogical_inequality_exprLeftAction_1_0(),
            $current);
    }
)(
(
(
		lv_op_2_1=	'<' 
    {
        newLeafNode(lv_op_2_1, grammarAccess.getLogical_inequality_exprAccess().getOpLessThanSignKeyword_1_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLogical_inequality_exprRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_1, null);
	    }

    |		lv_op_2_2=	'<=' 
    {
        newLeafNode(lv_op_2_2, grammarAccess.getLogical_inequality_exprAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLogical_inequality_exprRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_2, null);
	    }

    |		lv_op_2_3=	'>' 
    {
        newLeafNode(lv_op_2_3, grammarAccess.getLogical_inequality_exprAccess().getOpGreaterThanSignKeyword_1_1_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLogical_inequality_exprRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_3, null);
	    }

    |		lv_op_2_4=	'>=' 
    {
        newLeafNode(lv_op_2_4, grammarAccess.getLogical_inequality_exprAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLogical_inequality_exprRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_4, null);
	    }

    |		lv_op_2_5=	'inside' 
    {
        newLeafNode(lv_op_2_5, grammarAccess.getLogical_inequality_exprAccess().getOpInsideKeyword_1_1_0_4());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLogical_inequality_exprRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_5, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLogical_inequality_exprAccess().getRightBinary_shift_exprParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=rulebinary_shift_expr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLogical_inequality_exprRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"binary_shift_expr");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRulebinary_shift_expr
entryRulebinary_shift_expr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBinary_shift_exprRule()); }
	 iv_rulebinary_shift_expr=rulebinary_shift_expr 
	 { $current=$iv_rulebinary_shift_expr.current; } 
	 EOF 
;

// Rule binary_shift_expr
rulebinary_shift_expr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getBinary_shift_exprAccess().getBinary_add_sub_exprParserRuleCall_0()); 
    }
    this_binary_add_sub_expr_0=rulebinary_add_sub_expr
    { 
        $current = $this_binary_add_sub_expr_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getBinary_shift_exprAccess().getBinary_shift_exprLeftAction_1_0(),
            $current);
    }
)(
(
(
		lv_op_2_1=	'<<' 
    {
        newLeafNode(lv_op_2_1, grammarAccess.getBinary_shift_exprAccess().getOpLessThanSignLessThanSignKeyword_1_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBinary_shift_exprRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_1, null);
	    }

    |		lv_op_2_2=	'>>' 
    {
        newLeafNode(lv_op_2_2, grammarAccess.getBinary_shift_exprAccess().getOpGreaterThanSignGreaterThanSignKeyword_1_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBinary_shift_exprRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_2, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBinary_shift_exprAccess().getRightBinary_add_sub_exprParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=rulebinary_add_sub_expr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBinary_shift_exprRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"binary_add_sub_expr");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRulebinary_add_sub_expr
entryRulebinary_add_sub_expr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBinary_add_sub_exprRule()); }
	 iv_rulebinary_add_sub_expr=rulebinary_add_sub_expr 
	 { $current=$iv_rulebinary_add_sub_expr.current; } 
	 EOF 
;

// Rule binary_add_sub_expr
rulebinary_add_sub_expr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getBinary_add_sub_exprAccess().getBinary_mul_div_mod_exprParserRuleCall_0()); 
    }
    this_binary_mul_div_mod_expr_0=rulebinary_mul_div_mod_expr
    { 
        $current = $this_binary_mul_div_mod_expr_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getBinary_add_sub_exprAccess().getBinary_add_sub_exprLeftAction_1_0(),
            $current);
    }
)(
(
(
		lv_op_2_1=	'+' 
    {
        newLeafNode(lv_op_2_1, grammarAccess.getBinary_add_sub_exprAccess().getOpPlusSignKeyword_1_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBinary_add_sub_exprRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_1, null);
	    }

    |		lv_op_2_2=	'-' 
    {
        newLeafNode(lv_op_2_2, grammarAccess.getBinary_add_sub_exprAccess().getOpHyphenMinusKeyword_1_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBinary_add_sub_exprRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_2, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBinary_add_sub_exprAccess().getRightBinary_mul_div_mod_exprParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=rulebinary_mul_div_mod_expr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBinary_add_sub_exprRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"binary_mul_div_mod_expr");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRulebinary_mul_div_mod_expr
entryRulebinary_mul_div_mod_expr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBinary_mul_div_mod_exprRule()); }
	 iv_rulebinary_mul_div_mod_expr=rulebinary_mul_div_mod_expr 
	 { $current=$iv_rulebinary_mul_div_mod_expr.current; } 
	 EOF 
;

// Rule binary_mul_div_mod_expr
rulebinary_mul_div_mod_expr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getBinary_mul_div_mod_exprAccess().getBinary_exp_exprParserRuleCall_0()); 
    }
    this_binary_exp_expr_0=rulebinary_exp_expr
    { 
        $current = $this_binary_exp_expr_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getBinary_mul_div_mod_exprAccess().getBinary_mul_div_mod_exprLeftAction_1_0(),
            $current);
    }
)(
(
(
		lv_op_2_1=	'*' 
    {
        newLeafNode(lv_op_2_1, grammarAccess.getBinary_mul_div_mod_exprAccess().getOpAsteriskKeyword_1_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBinary_mul_div_mod_exprRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_1, null);
	    }

    |		lv_op_2_2=	'/' 
    {
        newLeafNode(lv_op_2_2, grammarAccess.getBinary_mul_div_mod_exprAccess().getOpSolidusKeyword_1_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBinary_mul_div_mod_exprRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_2, null);
	    }

    |		lv_op_2_3=	'%' 
    {
        newLeafNode(lv_op_2_3, grammarAccess.getBinary_mul_div_mod_exprAccess().getOpPercentSignKeyword_1_1_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBinary_mul_div_mod_exprRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_3, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBinary_mul_div_mod_exprAccess().getRightBinary_exp_exprParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=rulebinary_exp_expr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBinary_mul_div_mod_exprRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"binary_exp_expr");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRulebinary_exp_expr
entryRulebinary_exp_expr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBinary_exp_exprRule()); }
	 iv_rulebinary_exp_expr=rulebinary_exp_expr 
	 { $current=$iv_rulebinary_exp_expr.current; } 
	 EOF 
;

// Rule binary_exp_expr
rulebinary_exp_expr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getBinary_exp_exprAccess().getUnary_exprParserRuleCall_0()); 
    }
    this_unary_expr_0=ruleunary_expr
    { 
        $current = $this_unary_expr_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getBinary_exp_exprAccess().getBinary_exp_exprLeftAction_1_0(),
            $current);
    }
)	otherlv_2='**' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBinary_exp_exprAccess().getAsteriskAsteriskKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBinary_exp_exprAccess().getRightUnary_exprParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleunary_expr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBinary_exp_exprRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"unary_expr");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleunary_expr
entryRuleunary_expr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnary_exprRule()); }
	 iv_ruleunary_expr=ruleunary_expr 
	 { $current=$iv_ruleunary_expr.current; } 
	 EOF 
;

// Rule unary_expr
ruleunary_expr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='+' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getUnary_exprAccess().getPlusSignKeyword_0_0());
    }

    |	otherlv_1='-' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUnary_exprAccess().getHyphenMinusKeyword_0_1());
    }

    |	otherlv_2='!' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUnary_exprAccess().getExclamationMarkKeyword_0_2());
    }

    |	otherlv_3='~' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getUnary_exprAccess().getTildeKeyword_0_3());
    }

    |	otherlv_4='&' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getUnary_exprAccess().getAmpersandKeyword_0_4());
    }

    |	otherlv_5='|' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getUnary_exprAccess().getVerticalLineKeyword_0_5());
    }

    |	otherlv_6='^' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getUnary_exprAccess().getCircumflexAccentKeyword_0_6());
    }
)?
    { 
        newCompositeNode(grammarAccess.getUnary_exprAccess().getPrimaryParserRuleCall_1()); 
    }
    this_primary_7=ruleprimary
    { 
        $current = $this_primary_7.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleprimary
entryRuleprimary returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrimaryRule()); }
	 iv_ruleprimary=ruleprimary 
	 { $current=$iv_ruleprimary.current; } 
	 EOF 
;

// Rule primary
ruleprimary returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryAccess().getExprLiteralParserRuleCall_0_0()); 
	    }
		lv_expr_0_0=ruleliteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_0_0, 
        		"literal");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryAccess().getExprExpressionParserRuleCall_1_1_0()); 
	    }
		lv_expr_2_0=ruleexpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_2_0, 
        		"expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_1_2());
    }
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryAccess().getExprHierarchical_idParserRuleCall_2_0_0()); 
	    }
		lv_expr_4_0=rulehierarchical_id		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_4_0, 
        		"hierarchical_id");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5='[' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getPrimaryAccess().getLeftSquareBracketKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryAccess().getLhsExpressionParserRuleCall_2_1_1_0()); 
	    }
		lv_lhs_6_0=ruleexpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryRule());
	        }
       		set(
       			$current, 
       			"lhs",
        		lv_lhs_6_0, 
        		"expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=':' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getPrimaryAccess().getColonKeyword_2_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryAccess().getRhsExpressionParserRuleCall_2_1_2_1_0()); 
	    }
		lv_rhs_8_0=ruleexpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryRule());
	        }
       		set(
       			$current, 
       			"rhs",
        		lv_rhs_8_0, 
        		"expression");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_9=']' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getPrimaryAccess().getRightSquareBracketKeyword_2_1_3());
    }
)?))
;





// Entry rule entryRuleinterface_declaration
entryRuleinterface_declaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInterface_declarationRule()); }
	 iv_ruleinterface_declaration=ruleinterface_declaration 
	 { $current=$iv_ruleinterface_declaration.current; } 
	 EOF 
;

// Rule interface_declaration
ruleinterface_declaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='interface' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInterface_declarationAccess().getInterfaceKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getInterface_declarationAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInterface_declarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='extends' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInterface_declarationAccess().getExtendsKeyword_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInterface_declarationRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getInterface_declarationAccess().getSuperInterface_declarationCrossReference_2_1_0()); 
	}

)
))?	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInterface_declarationAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInterface_declarationAccess().getBodyInterface_body_itemParserRuleCall_4_0()); 
	    }
		lv_body_5_0=ruleinterface_body_item		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInterface_declarationRule());
	        }
       		add(
       			$current, 
       			"body",
        		lv_body_5_0, 
        		"interface_body_item");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getInterface_declarationAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleinterface_body_item
entryRuleinterface_body_item returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInterface_body_itemRule()); }
	 iv_ruleinterface_body_item=ruleinterface_body_item 
	 { $current=$iv_ruleinterface_body_item.current; } 
	 EOF 
;

// Rule interface_body_item
ruleinterface_body_item returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getInterface_body_itemAccess().getAction_declarationParserRuleCall()); 
    }
    this_action_declaration_0=ruleaction_declaration
    { 
        $current = $this_action_declaration_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleaction_declaration
entryRuleaction_declaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAction_declarationRule()); }
	 iv_ruleaction_declaration=ruleaction_declaration 
	 { $current=$iv_ruleaction_declaration.current; } 
	 EOF 
;

// Rule action_declaration
ruleaction_declaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='action' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAction_declarationAccess().getActionKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getAction_declarationAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAction_declarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAction_declarationAccess().getLeftParenthesisKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getAction_declarationAccess().getPortsAction_portlistParserRuleCall_3_0_0()); 
	    }
		lv_ports_3_0=ruleaction_portlist		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAction_declarationRule());
	        }
       		add(
       			$current, 
       			"ports",
        		lv_ports_3_0, 
        		"action_portlist");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAction_declarationAccess().getCommaKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAction_declarationAccess().getPortsAction_portlistParserRuleCall_3_1_1_0()); 
	    }
		lv_ports_5_0=ruleaction_portlist		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAction_declarationRule());
	        }
       		add(
       			$current, 
       			"ports",
        		lv_ports_5_0, 
        		"action_portlist");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getAction_declarationAccess().getRightParenthesisKeyword_4());
    }
	otherlv_7=';' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getAction_declarationAccess().getSemicolonKeyword_5());
    }
)
;





// Entry rule entryRuleaction_portlist
entryRuleaction_portlist returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAction_portlistRule()); }
	 iv_ruleaction_portlist=ruleaction_portlist 
	 { $current=$iv_ruleaction_portlist.current; } 
	 EOF 
;

// Rule action_portlist
ruleaction_portlist returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getAction_portlistAccess().getIo_directionParserRuleCall_0()); 
    }
ruleio_direction
    { 
        afterParserOrEnumRuleCall();
    }
)?((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAction_portlistRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getAction_portlistAccess().getTypeStruct_declarationCrossReference_1_0_0()); 
	}

)
)
    |
    { 
        newCompositeNode(grammarAccess.getAction_portlistAccess().getPrimitive_datatypeParserRuleCall_1_1()); 
    }
    this_primitive_datatype_2=ruleprimitive_datatype
    { 
        $current = $this_primitive_datatype_2.current; 
        afterParserOrEnumRuleCall();
    }
)(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getAction_portlistAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAction_portlistRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleio_direction
entryRuleio_direction returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIo_directionRule()); } 
	 iv_ruleio_direction=ruleio_direction 
	 { $current=$iv_ruleio_direction.current.getText(); }  
	 EOF 
;

// Rule io_direction
ruleio_direction returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='input' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIo_directionAccess().getInputKeyword_0()); 
    }

    |
	kw='output' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIo_directionAccess().getOutputKeyword_1()); 
    }

    |
	kw='inout' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIo_directionAccess().getInoutKeyword_2()); 
    }
)
    ;





// Entry rule entryRulegraph_data_declaration
entryRulegraph_data_declaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGraph_data_declarationRule()); }
	 iv_rulegraph_data_declaration=rulegraph_data_declaration 
	 { $current=$iv_rulegraph_data_declaration.current; } 
	 EOF 
;

// Rule graph_data_declaration
rulegraph_data_declaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='rand' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGraph_data_declarationAccess().getRandKeyword_0());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getGraph_data_declarationAccess().getTypeGraph_datatypeParserRuleCall_1_0()); 
	    }
		lv_type_1_0=rulegraph_datatype		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGraph_data_declarationRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"graph_datatype");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_names_2_0=RULE_ID
		{
			newLeafNode(lv_names_2_0, grammarAccess.getGraph_data_declarationAccess().getNamesIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGraph_data_declarationRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"names",
        		lv_names_2_0, 
        		"ID");
	    }

)
)(	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getGraph_data_declarationAccess().getLeftParenthesisKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGraph_data_declarationAccess().getPortmapsPort_mapParserRuleCall_3_1_0()); 
	    }
		lv_portmaps_4_0=ruleport_map		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGraph_data_declarationRule());
	        }
       		add(
       			$current, 
       			"portmaps",
        		lv_portmaps_4_0, 
        		"port_map");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getGraph_data_declarationAccess().getCommaKeyword_3_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGraph_data_declarationAccess().getPortmapsPort_mapParserRuleCall_3_2_1_0()); 
	    }
		lv_portmaps_6_0=ruleport_map		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGraph_data_declarationRule());
	        }
       		add(
       			$current, 
       			"portmaps",
        		lv_portmaps_6_0, 
        		"port_map");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getGraph_data_declarationAccess().getRightParenthesisKeyword_3_3());
    }
)?(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getGraph_data_declarationAccess().getCommaKeyword_4_0());
    }
(
(
		lv_names_9_0=RULE_ID
		{
			newLeafNode(lv_names_9_0, grammarAccess.getGraph_data_declarationAccess().getNamesIDTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGraph_data_declarationRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"names",
        		lv_names_9_0, 
        		"ID");
	    }

)
)(	otherlv_10='(' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getGraph_data_declarationAccess().getLeftParenthesisKeyword_4_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGraph_data_declarationAccess().getPortmapsPort_mapParserRuleCall_4_2_1_0()); 
	    }
		lv_portmaps_11_0=ruleport_map		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGraph_data_declarationRule());
	        }
       		add(
       			$current, 
       			"portmaps",
        		lv_portmaps_11_0, 
        		"port_map");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_12=',' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getGraph_data_declarationAccess().getCommaKeyword_4_2_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGraph_data_declarationAccess().getPortmapsPort_mapParserRuleCall_4_2_2_1_0()); 
	    }
		lv_portmaps_13_0=ruleport_map		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGraph_data_declarationRule());
	        }
       		add(
       			$current, 
       			"portmaps",
        		lv_portmaps_13_0, 
        		"port_map");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_14=')' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getGraph_data_declarationAccess().getRightParenthesisKeyword_4_2_3());
    }
)?)*	otherlv_15=';' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getGraph_data_declarationAccess().getSemicolonKeyword_5());
    }
)
;





// Entry rule entryRulesymbol_declaration
entryRulesymbol_declaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSymbol_declarationRule()); }
	 iv_rulesymbol_declaration=rulesymbol_declaration 
	 { $current=$iv_rulesymbol_declaration.current; } 
	 EOF 
;

// Rule symbol_declaration
rulesymbol_declaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='symbol' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSymbol_declarationAccess().getSymbolKeyword_0_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getSymbol_declarationAccess().getNameIDTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSymbol_declarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2=':=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSymbol_declarationAccess().getColonEqualsSignKeyword_0_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSymbol_declarationAccess().getInline_ruleStmt_or_blockParserRuleCall_0_2_1_0()); 
	    }
		lv_inline_rule_3_0=rulestmt_or_block		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSymbol_declarationRule());
	        }
       		set(
       			$current, 
       			"inline_rule",
        		lv_inline_rule_3_0, 
        		"stmt_or_block");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSymbol_declarationAccess().getSemicolonKeyword_0_2_2());
    }
)?)
    |(	otherlv_5='symbol' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSymbol_declarationAccess().getSymbolKeyword_1_0());
    }
(
(
		lv_names_6_0=RULE_ID
		{
			newLeafNode(lv_names_6_0, grammarAccess.getSymbol_declarationAccess().getNamesIDTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSymbol_declarationRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"names",
        		lv_names_6_0, 
        		"ID");
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSymbol_declarationAccess().getCommaKeyword_1_2_0());
    }
(
(
		lv_names_8_0=RULE_ID
		{
			newLeafNode(lv_names_8_0, grammarAccess.getSymbol_declarationAccess().getNamesIDTerminalRuleCall_1_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSymbol_declarationRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"names",
        		lv_names_8_0, 
        		"ID");
	    }

)
)(	otherlv_9=':=' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getSymbol_declarationAccess().getColonEqualsSignKeyword_1_2_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSymbol_declarationAccess().getInline_ruleStmt_or_blockParserRuleCall_1_2_2_1_0()); 
	    }
		lv_inline_rule_10_0=rulestmt_or_block		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSymbol_declarationRule());
	        }
       		set(
       			$current, 
       			"inline_rule",
        		lv_inline_rule_10_0, 
        		"stmt_or_block");
	        afterParserOrEnumRuleCall();
	    }

)
))?)	otherlv_11=';' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getSymbol_declarationAccess().getSemicolonKeyword_1_3());
    }
))
;





// Entry rule entryRuleport_map
entryRuleport_map returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPort_mapRule()); }
	 iv_ruleport_map=ruleport_map 
	 { $current=$iv_ruleport_map.current; } 
	 EOF 
;

// Rule port_map
ruleport_map returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='.' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPort_mapAccess().getFullStopKeyword_0());
    }
(
(
		lv_port_1_0=RULE_ID
		{
			newLeafNode(lv_port_1_0, grammarAccess.getPort_mapAccess().getPortIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPort_mapRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"port",
        		lv_port_1_0, 
        		"ID");
	    }

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPort_mapAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPort_mapAccess().getMapHierarchical_idParserRuleCall_3_0()); 
	    }
		lv_map_3_0=rulehierarchical_id		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPort_mapRule());
	        }
       		set(
       			$current, 
       			"map",
        		lv_map_3_0, 
        		"hierarchical_id");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPort_mapAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRulestruct_data_declaration
entryRulestruct_data_declaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStruct_data_declarationRule()); }
	 iv_rulestruct_data_declaration=rulestruct_data_declaration 
	 { $current=$iv_rulestruct_data_declaration.current; } 
	 EOF 
;

// Rule struct_data_declaration
rulestruct_data_declaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='rand' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStruct_data_declarationAccess().getRandKeyword_0());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getStruct_data_declarationAccess().getTypeStruct_datatypeParserRuleCall_1_0()); 
	    }
		lv_type_1_0=rulestruct_datatype		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStruct_data_declarationRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"struct_datatype");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_names_2_0=RULE_ID
		{
			newLeafNode(lv_names_2_0, grammarAccess.getStruct_data_declarationAccess().getNamesIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStruct_data_declarationRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"names",
        		lv_names_2_0, 
        		"ID");
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getStruct_data_declarationAccess().getCommaKeyword_3_0());
    }
(
(
		lv_names_4_0=RULE_ID
		{
			newLeafNode(lv_names_4_0, grammarAccess.getStruct_data_declarationAccess().getNamesIDTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStruct_data_declarationRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"names",
        		lv_names_4_0, 
        		"ID");
	    }

)
))*	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getStruct_data_declarationAccess().getSemicolonKeyword_4());
    }
)
;





// Entry rule entryRulegraph_datatype
entryRulegraph_datatype returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGraph_datatypeRule()); }
	 iv_rulegraph_datatype=rulegraph_datatype 
	 { $current=$iv_rulegraph_datatype.current; } 
	 EOF 
;

// Rule graph_datatype
rulegraph_datatype returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getGraph_datatypeAccess().getPrimitive_datatypeParserRuleCall_0()); 
    }
    this_primitive_datatype_0=ruleprimitive_datatype
    { 
        $current = $this_primitive_datatype_0.current; 
        afterParserOrEnumRuleCall();
    }

    |(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGraph_datatypeRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getGraph_datatypeAccess().getGraph_typenameGraph_struct_ifc_declarationCrossReference_1_0()); 
	}

)
))
;





// Entry rule entryRulestruct_datatype
entryRulestruct_datatype returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStruct_datatypeRule()); }
	 iv_rulestruct_datatype=rulestruct_datatype 
	 { $current=$iv_rulestruct_datatype.current; } 
	 EOF 
;

// Rule struct_datatype
rulestruct_datatype returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getStruct_datatypeAccess().getPrimitive_datatypeParserRuleCall_0()); 
    }
    this_primitive_datatype_0=ruleprimitive_datatype
    { 
        $current = $this_primitive_datatype_0.current; 
        afterParserOrEnumRuleCall();
    }

    |(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getStruct_datatypeRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getStruct_datatypeAccess().getStruct_typenameStruct_declarationCrossReference_1_0()); 
	}

)
))
;





// Entry rule entryRuleprimitive_datatype
entryRuleprimitive_datatype returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrimitive_datatypeRule()); }
	 iv_ruleprimitive_datatype=ruleprimitive_datatype 
	 { $current=$iv_ruleprimitive_datatype.current; } 
	 EOF 
;

// Rule primitive_datatype
ruleprimitive_datatype returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='signed' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPrimitive_datatypeAccess().getSignedKeyword_0_0());
    }

    |	otherlv_1='unsigned' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPrimitive_datatypeAccess().getUnsignedKeyword_0_1());
    }
)?
    { 
        newCompositeNode(grammarAccess.getPrimitive_datatypeAccess().getInteger_typeParserRuleCall_1()); 
    }
    this_integer_type_2=ruleinteger_type
    { 
        $current = $this_integer_type_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleinteger_type
entryRuleinteger_type returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInteger_typeRule()); }
	 iv_ruleinteger_type=ruleinteger_type 
	 { $current=$iv_ruleinteger_type.current; } 
	 EOF 
;

// Rule integer_type
ruleinteger_type returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInteger_typeAccess().getInteger_typeAction_0_0(),
            $current);
    }
)	otherlv_1='int' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInteger_typeAccess().getIntKeyword_0_1());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInteger_typeAccess().getInteger_typeAction_1_0(),
            $current);
    }
)	otherlv_3='bit' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInteger_typeAccess().getBitKeyword_1_1());
    }
(	otherlv_4='[' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInteger_typeAccess().getLeftSquareBracketKeyword_1_2_0());
    }
(
(
		lv_range_lhs_5_0=RULE_INT
		{
			newLeafNode(lv_range_lhs_5_0, grammarAccess.getInteger_typeAccess().getRange_lhsINTTerminalRuleCall_1_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInteger_typeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"range_lhs",
        		lv_range_lhs_5_0, 
        		"INT");
	    }

)
)	otherlv_6=':' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getInteger_typeAccess().getColonKeyword_1_2_2());
    }
(
(
		lv_range_rhs_7_0=RULE_INT
		{
			newLeafNode(lv_range_rhs_7_0, grammarAccess.getInteger_typeAccess().getRange_rhsINTTerminalRuleCall_1_2_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInteger_typeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"range_rhs",
        		lv_range_rhs_7_0, 
        		"INT");
	    }

)
)	otherlv_8=']' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getInteger_typeAccess().getRightSquareBracketKeyword_1_2_4());
    }
)?))
;





// Entry rule entryRulehierarchical_id
entryRulehierarchical_id returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHierarchical_idRule()); }
	 iv_rulehierarchical_id=rulehierarchical_id 
	 { $current=$iv_rulehierarchical_id.current; } 
	 EOF 
;

// Rule hierarchical_id
rulehierarchical_id returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_value_0_0=RULE_ID
		{
			newLeafNode(lv_value_0_0, grammarAccess.getHierarchical_idAccess().getValueIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHierarchical_idRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"ID");
	    }

)
)(	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getHierarchical_idAccess().getFullStopKeyword_1_0());
    }
this_ID_2=RULE_ID
    { 
    newLeafNode(this_ID_2, grammarAccess.getHierarchical_idAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
;





// Entry rule entryRuleliteral
entryRuleliteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLiteralRule()); }
	 iv_ruleliteral=ruleliteral 
	 { $current=$iv_ruleliteral.current; } 
	 EOF 
;

// Rule literal
ruleliteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_value_0_0=RULE_INT
		{
			newLeafNode(lv_value_0_0, grammarAccess.getLiteralAccess().getValueINTTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"INT");
	    }

)
)
;







// Entry rule entryRulesize
entryRulesize returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSizeRule()); }
	 iv_rulesize=rulesize 
	 { $current=$iv_rulesize.current; } 
	 EOF 
;

// Rule size
rulesize returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_value_0_0=RULE_INT
		{
			newLeafNode(lv_value_0_0, grammarAccess.getSizeAccess().getValueINTTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSizeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"INT");
	    }

)
)
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


